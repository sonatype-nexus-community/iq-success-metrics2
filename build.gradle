import java.text.SimpleDateFormat
import org.apache.tools.ant.filters.ReplaceTokens 

plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.sonatype.gradle.plugins.scan' version '1.2.0'
	id "com.palantir.docker" version "0.22.1"
 }

group = 'org.sonatype.cs'
version = '81'
sourceCompatibility = '8'
def applicationname = 'iq-success-metrics2'

def bundledir = "successmetrics/successmetrics"
def packagedir = "successmetrics-${version}"

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa:2.5.3')
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
        
	
  	implementation 'org.webjars:jquery:3.5.1'
	implementation 'org.webjars:bootstrap:4.5.0'
	implementation 'org.thymeleaf:thymeleaf:3.0.12.RELEASE'
	implementation 'org.xhtmlrenderer:flying-saucer-pdf-openpdf:9.1.20'
	implementation 'org.apache.commons:commons-csv:1.5'
	compileOnly 'com.opencsv:opencsv:5.2'
	implementation 'org.apache.httpcomponents:httpclient:4.5.9'
    implementation 'commons-codec:commons-codec:1.10'
    implementation 'commons-io:commons-io:2.11.0'
	implementation 'org.json:json:20210307'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    
}

nexusIQScan {
  username = 'admin'
  password = 'admin123'
  serverUrl = 'http://localhost:8070'
  applicationId = 'successmetrics'
  stage = 'build'  
  allConfigurations = true 
}

clean.doFirst {
	delete "${bundledir}"
	delete "${rootDir}/successmetrics"
	delete "${rootDir}/successmetrics.zip"
}

build.doFirst {
	mkdir "${bundledir}"
}

task releasejar (type: Copy) {
  from 'build/libs'
	include "successmetrics-${version}.jar"
  into "${bundledir}"
}

task copydependencies(type: Copy) {
  from configurations.default
  into 'build/dependencies'
}

task release (type: Copy) {
	from 'releasefiles'
	include '*.json'
	include 'create*'
	include 'reports2/'
	include 'config/'
	include 'runapp*'
	into "${bundledir}"
	filter(ReplaceTokens, tokens: [APPVER: project.version])
}

task package (type: Copy) {
	from 'releasefiles'
	include '*.json'
	include 'create*'
	include 'reports2/'
	include 'config/'
	include 'runapp*'
	into "${packagedir}"
	filter(ReplaceTokens, tokens: [APPVER: project.version])
}

task bundle(type: Zip) {
	from 'successmetrics'
	archiveName "successmetrics.zip"
	destinationDir(file(projectDir))
}

//task bootBuildImage { 
  //builder=..
  //imageName="${project.name}:${project.version}"
//}

package.dependsOn bootJar, jar
releasejar.dependsOn bootJar, jar
bundle.dependsOn releasejar, release



/*
gradle clean build bundle
*/

docker {
     name "${applicationname}:${project.version}"
     files '${bundledir}/successmetrics-*.jar'
}

